%{
This MATLAB code is for extracting magnetisation data from
.ovf files generated by Mumax3 [1].

***Pre-processing is required:
cd path to output folder, which contains .ovf files;
Use 'mumax3-convert' to convert binary .ovf files into ascii
style, please see details in [2].

[1] https://mumax.github.io
[2] https://godoc.org/github.com/mumax/3/cmd/mumax3-convert
%}

%% 1.Load FileHeader and system dimension
clc
clear
close all
display('loading data')
%path = ''
%cd(path)
aa3 = dir('m*.ovf');
bbm = {aa3(1:end).name}' %load *.ovf and generate a list
% load cellsize and gridsize in 1st .ovf
ii = 1;
[A,B] = importdata(char(bbm(ii)),' ',28);
cells = A.textdata;
cellx = str2num(cells{24}(13:end));
celly = str2num(cells{25}(13:end));
cellz = str2num(cells{26}(13:end));
gridx = str2num(cells{21}(10:end));
gridy = str2num(cells{22}(10:end));
gridz = str2num(cells{23}(10:end));
%% 2.Using for loops to read all .ovf files
for ii = 1:length(bbm)
    %% load mx, my, mz
    [A,B] = importdata(char(bbm(ii)),' ',28);
    mydata_m = A.data; %read magnetisation data
    for zz = 1:gridz
        for yy = 1:gridy
            for xx = 1:gridx
                realn = xx+(yy-1)*gridx+(zz-1)*gridx*gridy;
                u(xx,yy,zz) = mydata_m(realn,1); %mx
                v(xx,yy,zz) = mydata_m(realn,2); %my
                w(xx,yy,zz) = mydata_m(realn,3); %mz
            end
        end
    end
    mm = {u,v,w}; % save mx -> mm{1}, my -> mm{2}, mz -> mm{3}
end

%%
% ------------------------------------------------------------------------
% 3.You may do some modifications on mm matrix now, such as load skyrmion
%   ansatz. Then output to a new .ovf file in the next section.
% ------------------------------------------------------------------------

%% 4.save2ovf
ii % select the ii^{th} .ovf
nn = char(bbm(ii));
filename = [nn(1:end-4),'_modified.ovf']; % filename of the modified .ovf
FID = fopen(filename,'w');
% write FileHeader to filename
for ll = 1:length(A.textdata)
    ll
    temp = A.textdata(ll);
    fprintf(FID, '%c', temp{1});
    fprintf(FID,'\n')
end

% write magnetisation to filename
for zz = 1:gridz
    for yy = 1:gridy
        for xx = 1:gridx
            fprintf(FID, '%c', [num2str(u(xx,yy,zz)),' ',num2str(v(xx,yy,zz)),' ',num2str(w(xx,yy,zz))]);
            fprintf(FID,'\n');
        end
    end
end
fprintf(FID, '%c', ['# End: Data Text']);
fprintf(FID,'\n');
fprintf(FID, '%c', ['# End: Segment']);
fclose(FID);
